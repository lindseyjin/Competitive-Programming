/*
https://leetcode.com/problems/integer-to-english-words/
2019-04-06
*/

// much faster runtime if implemented with case switch but then it looks disgusting

class Solution {
public:
    string hundredToWords (int num) {
        unordered_map <int, string> m {
            {1, "One"}, {2, "Two"}, {3, "Three"}, {4, "Four"}, {5, "Five"}, {6, "Six"}, {7, "Seven"}, 
            {8, "Eight"}, {9, "Nine"}, {10, "Ten"}, {11, "Eleven"}, {12, "Twelve"}, {13, "Thirteen"}, {14, "Fourteen"}, 
            {15, "Fifteen"},{16, "Sixteen"}, {17, "Seventeen"}, {18, "Eighteen"}, {19, "Nineteen"}, {20, "Twenty"},
            {30, "Thirty"}, {40, "Forty"}, {50, "Fifty"}, {60, "Sixty"}, {70, "Seventy"}, {80,"Eighty"}, {90, "Ninety"}
        };
        string ans = "";
            
        if (num >= 100) {
            ans += m.at(num/100) + " ";  
            ans += "Hundred ";
            num %= 100;
        }
        if (num >= 20) {
            ans += m.at(num - num%10) + " ";
            num %= 10;
        } 
        if (num > 0) ans += m.at(num) + " ";
        
        return ans;
    
    }
    string numberToWords(int num) {
        if (num == 0) return "Zero";
        
        string ans = "";
        int digits;
        
        // billion
        if (num >= 1000000000) {
            digits = num/1000000000;
            num %= 1000000000;
            ans += hundredToWords(digits) + "Billion ";
        }
        // million
        if (num >= 1000000) {
            digits = num/1000000;
            num %= 1000000;
            ans += hundredToWords(digits) + "Million ";
        }
        // thousand
        if (num >= 1000) {
            digits = num/1000;
            num %= 1000;
            ans += hundredToWords(digits) + "Thousand ";
        }
        
        // ones
        ans += hundredToWords(num);
        
        // remove trailing space
        if (ans.at(ans.length() - 1) == ' ') ans = ans.substr(0, ans.length()-1);
        
        return ans;
    }
};